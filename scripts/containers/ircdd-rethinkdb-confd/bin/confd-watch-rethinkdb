#! /bin/bash
set -eo pipefail

export ETCD_PORT=${ETCD_PORT:-4001}
export HOST_IP=${HOST_IP:-172.17.42.1}
export ETCD=$HOST_IP:$ETCD_PORT

# Register the current node before it starts so that confd can bootstrap itself.
get_reg_str() {
    printf '{"host": "%s", "cluster": "%s", "client": "%s", "http": "%s"}' "${HOST_IP}" "29015" "28015" "8080"
}
curl -L $ETCD/v2/keys/services/rethinkdb/$HOST_IP -XPUT -d ttl=30 -d value="`get_reg_str`"

# This hack is necessary since the getenv function is not in confd 0.6.3 (latest stable)
cp /etc/confd/templates/rethinkdb.tmpl /etc/confd/templates/rethinkdb.tmpl.base
printf '{{$local_node := "%s"}}\n'\
       "$HOST_IP" | cat - /etc/confd/templates/rethinkdb.tmpl.base > /etc/confd/templates/rethinkdb.tmpl

echo "[rdb] booting container. ETCD: $ETCD"

until confd -onetime -node $ETCD -config-file /etc/confd/conf.d/rethinkdb.toml; do
    echo "[rdb] waiting for confd to create initial rdb configuration"
    sleep 5
done

if [ ! -d "/data/rethinkdb_data" ]; then
    echo "[rdb] creating rdb data dir"
    rethinkdb create -d /data/rethinkdb_data
fi

echo "[rdb] starting rdb..."
rethinkdb serve --config-file /etc/rethinkdb/rethinkdb.conf --canonical-address $HOST_IP

tail -f /var/log/*.log
